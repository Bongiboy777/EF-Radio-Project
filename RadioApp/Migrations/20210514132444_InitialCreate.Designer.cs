// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadioDatabase;

namespace RadioDatabase.Migrations
{
    [DbContext(typeof(RadioContext))]
    [Migration("20210514132444_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RadioDatabase.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("RadioDatabase.PlayList", b =>
                {
                    b.Property<int>("PlayListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByNavigationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayListId");

                    b.HasIndex("CreatedByNavigationUserId");

                    b.HasIndex("GenreId");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("RadioDatabase.Track", b =>
                {
                    b.Property<int>("TrackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayListId")
                        .HasColumnType("int");

                    b.Property<string>("SourceURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrackID");

                    b.HasIndex("GenreId");

                    b.HasIndex("PlayListId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("RadioDatabase.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RadioDatabase.UserPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlayListId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayListId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlaylists");
                });

            modelBuilder.Entity("RadioDatabase.PlayList", b =>
                {
                    b.HasOne("RadioDatabase.User", "CreatedByNavigation")
                        .WithMany("PlayLists")
                        .HasForeignKey("CreatedByNavigationUserId");

                    b.HasOne("RadioDatabase.Genre", "Genre")
                        .WithMany("PlayLists")
                        .HasForeignKey("GenreId");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("RadioDatabase.Track", b =>
                {
                    b.HasOne("RadioDatabase.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("RadioDatabase.PlayList", "PlayList")
                        .WithMany()
                        .HasForeignKey("PlayListId");

                    b.Navigation("Genre");

                    b.Navigation("PlayList");
                });

            modelBuilder.Entity("RadioDatabase.UserPlaylist", b =>
                {
                    b.HasOne("RadioDatabase.PlayList", "PlayList")
                        .WithMany("UserPlaylists")
                        .HasForeignKey("PlayListId");

                    b.HasOne("RadioDatabase.User", "User")
                        .WithMany("UserPlaylists")
                        .HasForeignKey("UserId");

                    b.Navigation("PlayList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RadioDatabase.Genre", b =>
                {
                    b.Navigation("PlayLists");
                });

            modelBuilder.Entity("RadioDatabase.PlayList", b =>
                {
                    b.Navigation("UserPlaylists");
                });

            modelBuilder.Entity("RadioDatabase.User", b =>
                {
                    b.Navigation("PlayLists");

                    b.Navigation("UserPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
